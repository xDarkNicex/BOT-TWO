require("dotenv").config(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
const { Bot } = require("grammy");

const bot = new Bot(process.env.BOT_TOKEN);

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const userGames = new Map();

bot.command("start", (ctx) => {
    ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /play —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!");
});

bot.command("play", (ctx) => {
    const secretNumber = Math.floor(Math.random() * 100) + 1; // —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
    userGames.set(ctx.chat.id, secretNumber);
    ctx.reply("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!");
});

bot.on("message:text", (ctx) => {
    const userNumber = parseInt(ctx.message.text);
    const secret = userGames.get(ctx.chat.id);

    if (!secret) {
        ctx.reply("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏ –∏–≥—Ä—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /play");
        return;
    }

    if (isNaN(userNumber)) {
        ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ");
        return;
    }

    if (userNumber < secret) {
        ctx.reply("–ë–æ–ª—å—à–µ!");
    } else if (userNumber > secret) {
        ctx.reply("–ú–µ–Ω—å—à–µ!");
    } else {
        ctx.reply("üéâ –í—ã —É–≥–∞–¥–∞–ª–∏! –•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑? –ù–∞–ø–∏—à–∏—Ç–µ /play");
        userGames.delete(ctx.chat.id);
    }
});

bot.start();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");

